
                        ************** Pair in C++ Standard Template Library (STL) ********************

The pair container is a simple container defined in <utility> header consisting of two data elements or objects.

    The first element is referenced as ‘first’ and the second element as ‘second’ and the order is fixed (first, second).
    Pair is used to combine together two values which may be different in type. 
    Pair provides a way to store two heterogeneous objects as a single unit.

    Pair can be assigned, copied and compared. The array of objects allocated in a map or hash_map are of type ‘pair’ by default in which all the ‘first’ elements are unique keys associated with their ‘second’ value objects.

    To access the elements, we use variable name followed by dot operator followed by the keyword first or second.



**************** OPERATIONS

make_pair() : This template function allows to create a value pair without writing the types explicitly.
Syntax :

1.Pair_name = make_pair (value1,value2);

2.operators(=, ==, !=, >=, <=) : We can use operators with pairs as well.

    using equal(=) : It assigns new object for a pair object.
    Syntax :

    pair& operator= (const pair& pr);

    This Assigns pr as the new content for the pair object. The first value is assigned the first value of pr and the second value is assigned the second value of pr .
    Comparison (==) operator with pair : For given two pairs say pair1 and pair2, the comparison operator compares the first value and second value of those two pairs 
    i.e. if pair1.first is equal to pair2.first or not AND if pair1.second is equal to pair2.second or not .

    Not equal (!=) operator with pair : For given two pairs say pair1 and pair2, the != operator compares the first values of those two pairs 
    i.e. if pair1.first is equal to pair2.first or not, if they are equal then it checks the second values of both.

    Logical( >=, <= )operators with pair : For given two pairs say pair1 and pair2, the =, >, can be used with pairs as well. It returns 0 or 1 by only comparing the first value of the pair.

3.swap : This function swaps the contents of one pair object with the contents of another pair object. The pairs must be of same type.
Syntax :

pair1.swap(pair2) ;

For two given pairs say pair1 and pair2 of same type, swap function will swap the pair1.first with pair2.first and pair1.second with pair2.second.
