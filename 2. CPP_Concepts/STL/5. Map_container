
                    ************** Map in C++ Standard Template Library (STL) ************************

Maps are associative containers that store elements in a mapped fashion. Each element has a key value and a mapped value. No two mapped values can have same key values.

******** Functions associated with Map :

        map<int,string> kv;

begin() – Returns an iterator to the first element in the map
            map<int,string>::iterator it = kv.begin();

end() – Returns an iterator to the theoretical element that follows last element in the map

size() – Returns the number of elements in the map

max_size() – Returns the maximum number of elements that the map can hold

empty() – Returns whether the map is empty

pair insert(keyvalue, mapvalue) – Adds a new element to the map
            kv.insert(pair<int, int>(1, 40));

erase(iterator position) – Removes the element at the position pointed by the iterator

erase(const g)– Removes the key value ‘g’ from the map

clear() – Removes all the elements from the map

